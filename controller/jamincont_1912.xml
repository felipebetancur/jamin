<?xml version="1.0"?>
<!DOCTYPE ladspa SYSTEM "ladspa-swh.dtd">
<?xml-stylesheet href="ladspa.css" type="text/css"?>

<ladspa>
  <global>
    <meta name="maker" value="xxx &lt;yyy@zzz.com&gt;"/>
    <meta name="copyright" value="GPL"/>
    <meta name="properties" value="HARD_RT_CAPABLE"/>
    <code><![CDATA[
      #include <unistd.h>
      #include <stdio.h>
      #include <pthread.h>
      #include <lo.h>

      #include "../src/constants.h"

      #define EXITV -999

      static void *controller_thread(void *p)
      {
	volatile int *scene = p;
	int last_scene = -1;
      	lo_address address = lo_address_new(NULL, "4444");

	printf("THREAD\n");

	while (*scene != EXITV) {
	  if (last_scene != *scene) {
	    last_scene = *scene;
	    lo_send(address, "/scene", "i", last_scene);
	  }
	  usleep(100);
	}

	//printf("DONE\n");

	return NULL;
      }
    ]]></code>
  </global>

  <plugin label="jaminController" id="1912" class="UtilityPlugin">
    <name>JAMin Controller</name>

    <callback event="instantiate"><![CDATA[
      thread = malloc(sizeof(pthread_t));
      pthread_create(thread, NULL, controller_thread, &(plugin_data->scene));
      scene = -1;
    ]]></callback>

    <callback event="activate"><![CDATA[
      scene = -1;
    ]]></callback>

    <callback event="run"><![CDATA[
      unsigned long pos;

      plugin_data->scene = (int)(scene_cont + 0.5f);

      if (input != output) {
        for (pos = 0; pos < sample_count; pos++) {
          buffer_write(output[pos], input[pos]);
        }
      }
    ]]></callback>

    <callback event="cleanup"><![CDATA[
      plugin_data->scene = EXITV;
    ]]></callback>

    <port label="scene_cont" dir="input" type="control" hint="default_1,integer">
      <name>Scene no.</name>
      <p>Changes the JAMin scene number</p>
      <range min="1" max="NUM_SCENES"/>
    </port>

    <port label="input" dir="input" type="audio">
      <name>Input</name>
    </port>

    <port label="output" dir="output" type="audio">
      <name>Output</name>
    </port>

    <instance-data label="scene" type="int" />
    <instance-data label="thread" type="pthread_t *" />
  </plugin>
</ladspa>
